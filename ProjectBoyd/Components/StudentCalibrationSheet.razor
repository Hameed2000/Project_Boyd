@using Microsoft.AspNetCore.Mvc;
@using Microsoft.AspNetCore.Mvc.RazorPages;
@using Microsoft.AspNetCore.WebUtilities;
@using ProjectBoyd.Models;
@using ProjectBoyd.Data;
@using Microsoft.AspNetCore.Identity.EntityFrameworkCore;
@using ProjectBoyd.Models.EntityModels;
@using ProjectBoyd.Models.ObjectModels;
@using Microsoft.AspNetCore.Identity;

@inject UserManager<ApplicationUser> userManager
@inject ApplicationDbContext dbContext
@inject AuthenticationStateProvider AuthenticationStateProvider

<div id="body-main">

    <StudentMessage>  </StudentMessage>

    <!-- MODALS GO HERE -->
    <div id="main-modal-container" class="basic-modal-container">

        <div id="confirmation-modal" class="basic-modal-item">

            <div class="list-flex" style="width:100%;">

                <!-- close button -->

                <button id="confirmation-modal-close" class="icon-button" style="position: absolute; top: 0px; right: 0px; padding:5px;" type="button">
                    <span class="material-icons" style="margin:auto;font-size:25px">close</span>
                </button>

                <div class="default-text title" style="margin-bottom:15px;text-align: left;">confirmation_title</div>

                <div class="default-text" style="margin-bottom: 15px; font-size: 1.1em;text-align: left;">confirmation_body</div>

                <div style="height:35px" class="basic-modal-button-container active">

                    <div id="confirmation-modal-one-option" class="centering-flex basic-modal-button-container">

                        <button class="rounded-button centering-flex">

                            <div class="default-text" style="color: inherit">option_text</div>

                        </button>

                    </div>

                    <div id="confirmation-modal-two-option" class="centering-flex basic-modal-button-container">

                        <button class="rounded-button centering-flex">

                            <div class="default-text" style="color: inherit">option_text</div>

                        </button>

                        <button class="rounded-button centering-flex">

                            <div class="default-text" style="color: inherit">option_text</div>

                        </button>

                    </div>

                </div>

            </div>

        </div>

    </div>

    <!-- the main body container-->
    <div class="nav-bar">
        <button id="menu-toggle" class="icon-button" style="height:55px;width:55px;margin-left:15px;display:none;">
            <span class="material-icons" style="margin:auto;font-size:30px">menu</span>
        </button>

        <div class="flex-divider"></div>

    </div>


    <!-- PAGE CONTENT GOES HERE -->

    <img id="session-calibration-sheet-image" class="session-image-panel" src=@imgPath>


</div>

@code {

    ApplicationUser currentUser;
    TeamEntity team;
    SessionTeam sessionTeamInfo;
    string imgPath = "";


    protected override async Task OnInitializedAsync() {

        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        currentUser = await userManager.FindByNameAsync(user.Identity.Name);
        team = dbContext.Teams.Where(t => t.AccountId == currentUser.Id).FirstOrDefault();
        sessionTeamInfo = SessionInfo.SessionInfoList.GetValueOrDefault(team.SessionId).GetValueOrDefault(team.TeamId.ToString());

        imgPath = sessionTeamInfo.TagAssigned.CDSImageAddress;

    }

}